# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: prosnet-prefect-pipelines
prefect-version: 2.8.3+1589.g1dd04fcae

# build section allows you to manage and build docker images
build:

# push section allows you to manage if and how this project is uploaded to remote locations
push:

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    id: clone-step
    repository: https://github.com/acdh-oeaw/prosnet-prefect-pipelines.git
    branch: main
    access_token:
- prefect.deployments.steps.pip_install_requirements:
    id: install-deps-project
    directory: '{{ clone-step.directory }}'
    requirements_file: requirements.txt
    stream_output: false

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name:
  version:
  tags: []
  description:
  schedule: {}
  flow_name:
  entrypoint:
  parameters: {}
  work_pool:
    name:
    work_queue_name:
    job_variables: {}
- name: default
  version:
  tags: []
  description: Create a typesense index from a SPARQL data.
  entrypoint: 
    prosnet-prefect-pipelines/wikidata_index.py:create_typesense_index_from_sparql_query
  parameters: {}
  work_pool:
    name: intavia
    work_queue_name:
    job_variables: {}
  schedule:
  is_schedule_active: true
